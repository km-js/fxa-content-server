version: 2
jobs:
    build:
        working_directory: ~/fxa
        docker:
        - image: circleci/node:8
          environment:
          - DISPLAY=:99
        - image: redis

        steps:
        - checkout
        - run:
              command: |
                  sudo apt-get install -y python-setuptools python-dev build-essential xvfb
                  sudo easy_install pip
                  sudo pip install mozdownload mozinstall
                  mozdownload --version 58.0 --destination firefox.tar.bz2
                  mozinstall firefox.tar.bz2
                  sudo npm install -g npm@6

                  cp server/config/local.json-dist server/config/local.json
                  npm ci

                  CONFIG_FILES=server/config/local.json,server/config/production.json,tests/ci/config_circleci.json node_modules/.bin/grunt build
                  npm i retry-cli
                  ln -s node_modules/.bin/retry retry

        - persist_to_workspace:
              root: ~/
              paths: ./*

    test1:
        environment:
            CIRCLE_NODE_INDEX: 0
            CIRCLE_NODE_TOTAL: 4

        working_directory: ~/fxa
        docker:
            - image: circleci/node:8-stretch-browsers
            - image: redis
        steps:
        - attach_workspace:
              at: ~/

        - run:
              name: Run fxa-content-server
              command: |
                  CONFIG_FILES=server/config/local.json,server/config/production.json,tests/ci/config_circleci.json node_modules/.bin/grunt serverproc:dist
              background: true

        - run:
              name: Check server
              command: |
                  sleep 10
                  curl http://127.0.0.1:3030

        - run:
              name: Run tests
              shell: /bin/bash --login
              command: |
                  ./retry -n 1 -- npm run test-circle -- --firefoxBinary=./firefox/firefox

    test2:
        environment:
            CIRCLE_NODE_INDEX: 1
            CIRCLE_NODE_TOTAL: 4

        working_directory: ~/fxa
        docker:
        - image: circleci/node:8-stretch-browsers
        - image: redis
        steps:
        - attach_workspace:
              at: ~/

        - run:
              name: Run fxa-content-server
              command: |
                  CONFIG_FILES=server/config/local.json,server/config/production.json,tests/ci/config_circleci.json node_modules/.bin/grunt serverproc:dist
              background: true

        - run:
              name: Check server
              command: |
                  sleep 10
                  curl http://127.0.0.1:3030

        - run:
              name: Run tests
              shell: /bin/bash --login
              command: |
                  ./retry -n 1 -- npm run test-circle -- --firefoxBinary=./firefox/firefox

    test3:
        environment:
            CIRCLE_NODE_INDEX: 2
            CIRCLE_NODE_TOTAL: 4

        working_directory: ~/fxa
        docker:
        - image: circleci/node:8-stretch-browsers
        - image: redis
        steps:
        - attach_workspace:
              at: ~/

        - run:
              name: Run fxa-content-server
              command: |
                  CONFIG_FILES=server/config/local.json,server/config/production.json,tests/ci/config_circleci.json node_modules/.bin/grunt serverproc:dist
              background: true

        - run:
              name: Check server
              command: |
                  sleep 10
                  curl http://127.0.0.1:3030

        - run:
              name: Run tests
              shell: /bin/bash --login
              command: |
                  ./retry -n 1 -- npm run test-circle -- --firefoxBinary=./firefox/firefox

    test4:
        environment:
            CIRCLE_NODE_INDEX: 3
            CIRCLE_NODE_TOTAL: 4

        working_directory: ~/fxa
        docker:
        - image: circleci/node:8-stretch-browsers
        - image: redis
        steps:
        - attach_workspace:
              at: ~/

        - run:
              name: Run fxa-content-server
              command: |
                  CONFIG_FILES=server/config/local.json,server/config/production.json,tests/ci/config_circleci.json node_modules/.bin/grunt serverproc:dist
              background: true

        - run:
              name: Check server
              command: |
                  sleep 10
                  curl http://127.0.0.1:3030

        - run:
              name: Run tests
              shell: /bin/bash --login
              command: |
                  ./retry -n 1 -- npm run test-circle -- --firefoxBinary=./firefox/firefox

    test-pairing:
        working_directory: ~/fxa
        docker:
            - image: circleci/node:8-stretch-browsers
            - image: redis
        steps:
            - attach_workspace:
                  at: ~/

            - run:
                  name: Run fxa-content-server
                  command: |
                      CONFIG_FILES=server/config/local.json,server/config/production.json,tests/ci/config_circleci.json node_modules/.bin/grunt serverproc:dist
                  background: true

            - run:
                  name: Check server
                  command: |
                      sleep 10
                      curl http://127.0.0.1:3030

            - run:
                  name: Run tests
                  shell: /bin/bash --login
                  # Download the Nightly pairing build
                  # From: https://treeherder.mozilla.org/#/jobs?repo=try&revision=7f10c7614e9fa46d6679a0ad4f0a1e02985e5425
                  command: |
                      wget https://s3-us-west-2.amazonaws.com/fxa-dev-bucket/fenix-pair/desktop/7f10c7614e9fa46-target.tar.bz2
                      sudo apt-get install -y python-setuptools python-dev build-essential
                      sudo easy_install pip
                      sudo pip install mozinstall
                      mozinstall 7f10c7614e9fa46-target.tar.bz2
                      ./retry -n 1 -- npm run test-pairing-circle -- --firefoxBinary=./firefox/firefox

    dockerpush:
        docker:
        - image: circleci/node:8-stretch-browsers
        - image: redis

        steps:
        - checkout

        - setup_remote_docker

        - run: mkdir -p config

        - run:
              name: Create version.json
              command: >
                  printf '{"version":{"hash":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}}\n'
                  "$CIRCLE_SHA1"
                  "$CIRCLE_TAG"
                  "$CIRCLE_PROJECT_USERNAME"
                  "$CIRCLE_PROJECT_REPONAME"
                  "$CIRCLE_BUILD_URL"
                  | tee config/version.json version.json

        - store_artifacts:
              path: version.json

        - run:
              name: Build deployment container image
              command: docker build -f Dockerfile-build -t fxa-content-server:build .

        - run:
              name: Push to Dockerhub
              command: |
                  if [ "${CIRCLE_BRANCH}" == "master" ]; then
                    DOCKER_TAG="latest"
                  fi
                  if [[ "${CIRCLE_BRANCH}" == feature* ]] || [[ "${CIRCLE_BRANCH}" == dockerpush* ]]; then
                    DOCKER_TAG="${CIRCLE_BRANCH}"
                  fi
                  if [ -n "${CIRCLE_TAG}" ]; then
                    DOCKER_TAG="$CIRCLE_TAG"
                  fi
                  if [ -n "${DOCKER_TAG}" ]; then
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    echo ${DOCKERHUB_REPO}:${DOCKER_TAG}
                    docker tag fxa-content-server:build ${DOCKERHUB_REPO}:${DOCKER_TAG}
                    docker images
                    docker push ${DOCKERHUB_REPO}:${DOCKER_TAG}
                  fi

workflows:
    version: 2

    build-test-push:
        jobs:
            - build
            - test1:
                requires:
                    - build
            - test2:
                requires:
                    - build
            - test3:
                requires:
                    - build
            - test4:
                  requires:
                    - build
            - test-pairing:
                  requires:
                    - build
            - dockerpush:
                  filters:
                      tags:
                          only: /.*/
